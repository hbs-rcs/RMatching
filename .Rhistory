nsw_dw <- haven::read_dta("http://www.nber.org/~rdehejia/data/nsw_dw.dta")
PSID <- haven::read_dta("http://www.nber.org/~rdehejia/data/psid_controls.dta")
## If the server seems overloaded, please load locally:
# nsw_dw <- haven::read_dta("data/nsw_dw.dta")
# PSID <- haven::read_dta("data/psid_controls.dta")
# Examine the NSW data
dim(nsw_dw)
str(nsw_dw)
head(nsw_dw)
summary(nsw_dw)
table(nsw_dw$treat)
# Examine the PSID data
dim(PSID)
str(PSID)
head(PSID)
summary(PSID)
##
##
# Marginal difference between means
marg_mod <- lm(re78 ~ treat, data=nsw_dw)
summary(marg_mod)
confint(marg_mod)
# Treatment effect using regression adjustment
cond_mod <- lm(re78 ~ treat + age + education + black + hispanic +
nodegree + married + re74 + re75,
data = nsw_dw)
summary(cond_mod)
confint(cond_mod)
xBal_res <- RItools::xBalance(treat ~ .,
data = nsw_dw %>% select(-data_id, -re78),
report="all")
xBal_res
# round(xBal_res$result,4)
bal_res <- cobalt::bal.tab(nsw_dw %>% select(-data_id, -re78),
treat = nsw_dw$treat,
disp.means = T,
disp.sds = T,
stats = c("mean.diffs", "variance.ratios", "ks.statistics"))
bal_res
# cobalt package has the most intuitive visualization functions
cobalt::bal.plot(nsw_dw %>% select(-data_id, -re78),
treat = nsw_dw$treat,
var.name = "age")
cobalt::bal.plot(nsw_dw,
treat = nsw_dw$treat,
var.name = "education",
type = "histogram")
cobalt::bal.plot(nsw_dw,
treat = nsw_dw$treat,
var.name = "nodegree")
nsw_PSID <- nsw_dw %>%
filter(treat==1) %>%
bind_rows(PSID)
summary(nsw_PSID)
sum(nsw_PSID$treat)
##
##
## Let's use bal.tab
bal.tab(nsw_PSID %>% select(-data_id, -re78),
treat = nsw_PSID$treat,
disp.means = T,
disp.sds = T,
stats = c("mean.diffs", "variance.ratios", "ks.statistics"))
nsw_PSID_posRE74 <- nsw_PSID %>% filter(re74>0)
bal.plot(nsw_PSID_posRE74,
treat = nsw_PSID_posRE74$treat,
var.name = "re74")
bal.plot(nsw_PSID,
treat = nsw_PSID$treat,
var.name = "married")
# Treatment effect using regression adjustment
raw_mod <- lm(re78 ~ treat + age + education + black +
hispanic + nodegree + married + re74 + re75,
data = nsw_PSID)
summary(raw_mod)
confint(raw_mod)
m_NNM_out <- MatchIt::matchit(treat ~ age + education + black + hispanic +
married + nodegree + re74 + re75,
data = nsw_PSID) # Try discard = "both"
summary(m_NNM_out) # Can add standardize = TRUE
## `cobalt` package offers additional summaries of distributional differences
## Note that it can process objects returned by matchit()!
cobalt::bal.tab(m_NNM_out,
disp.means = T,
disp.sds = T,
stats = c("mean.diffs", "variance.ratios", "ks.statistics"))
s.out <- summary(m_NNM_out, standardize = TRUE)
# The default plotting function in `MatchIt`
plot(s.out, interactive = F)
# Compare the distribution of propensity scores before and after matching
plot(m_NNM_out, type = "hist")
cobalt::love.plot(m_NNM_out,
stats = c("mean.diffs", "ks.statistics"),
threshold = c(m = .5, ks = .25),
binary = "std", #display standardized mean difference for all of the covariates
#abs = TRUE,
var.order = "unadjusted",
grid = T,
sample.names = c("Unmatched", "Matched"),
position = "top",
colors = c("red", "blue"))
# Propensity Scores before and after weighting (which = "both")
cobalt::bal.plot(m_NNM_out,
var.name = "distance",
which = "both",
type = "histogram",
mirror = TRUE)
m.data.NNM <- MatchIt::match.data(m_NNM_out)
summary(m.data.NNM)
m.data.NNM$treat %>% table
# Treatment effect using regression adjustment
NNM_mod <- lm(re78 ~ treat + age + education + black + hispanic +
nodegree + married + re74 + re75,
data = m.data.NNM)
summary(NNM_mod)
confint(NNM_mod)
options(max.print = 100)
# install.packages("tidyverse")
library(tidyverse)
# install.packages("haven")
library(haven)
# install.packages("rmarkdown")
library(rmarkdown)
# install.packages("MatchIt")
library(MatchIt) # for propensity score matching
# install.packages("cem")
library(cem) # for coarsened exact matching
# install.packages("RItools")
library(RItools) # for displaying balance statistics
# install.packages("cobalt")
library(cobalt) # for displaying balance statistics
## Data is hosted on one of the authors' web-site
## Note that this data set is a subset of the original data,
## excluding subject with missing information on prior earnings
nsw_dw <- haven::read_dta("http://www.nber.org/~rdehejia/data/nsw_dw.dta")
PSID <- haven::read_dta("http://www.nber.org/~rdehejia/data/psid_controls.dta")
## If the server seems overloaded, please load locally:
# nsw_dw <- haven::read_dta("data/nsw_dw.dta")
# PSID <- haven::read_dta("data/psid_controls.dta")
# Examine the NSW data
dim(nsw_dw)
str(nsw_dw)
head(nsw_dw)
summary(nsw_dw)
table(nsw_dw$treat)
# Examine the PSID data
dim(PSID)
str(PSID)
head(PSID)
summary(PSID)
##
##
# Marginal difference between means
marg_mod <- lm(re78 ~ treat, data=nsw_dw)
summary(marg_mod)
confint(marg_mod)
# Treatment effect using regression adjustment
cond_mod <- lm(re78 ~ treat + age + education + black + hispanic +
nodegree + married + re74 + re75,
data = nsw_dw)
summary(cond_mod)
confint(cond_mod)
xBal_res <- RItools::xBalance(treat ~ .,
data = nsw_dw %>% select(-data_id, -re78),
report="all")
xBal_res
# round(xBal_res$result,4)
bal_res <- cobalt::bal.tab(nsw_dw %>% select(-data_id, -re78),
treat = nsw_dw$treat,
disp.means = T,
disp.sds = T,
stats = c("mean.diffs", "variance.ratios", "ks.statistics"))
bal_res
# cobalt package has the most intuitive visualization functions
cobalt::bal.plot(nsw_dw %>% select(-data_id, -re78),
treat = nsw_dw$treat,
var.name = "age")
cobalt::bal.plot(nsw_dw,
treat = nsw_dw$treat,
var.name = "education",
type = "histogram")
cobalt::bal.plot(nsw_dw,
treat = nsw_dw$treat,
var.name = "nodegree")
nsw_PSID <- nsw_dw %>%
filter(treat==1) %>%
bind_rows(PSID)
summary(nsw_PSID)
sum(nsw_PSID$treat)
##
##
## Let's use bal.tab
bal.tab(nsw_PSID %>% select(-data_id, -re78),
treat = nsw_PSID$treat,
disp.means = T,
disp.sds = T,
stats = c("mean.diffs", "variance.ratios", "ks.statistics"))
nsw_PSID_posRE74 <- nsw_PSID %>% filter(re74>0)
bal.plot(nsw_PSID_posRE74,
treat = nsw_PSID_posRE74$treat,
var.name = "re74")
bal.plot(nsw_PSID,
treat = nsw_PSID$treat,
var.name = "married")
# Treatment effect using regression adjustment
raw_mod <- lm(re78 ~ treat + age + education + black +
hispanic + nodegree + married + re74 + re75,
data = nsw_PSID)
summary(raw_mod)
confint(raw_mod)
m_NNM_out <- MatchIt::matchit(treat ~ age + education + black + hispanic +
married + nodegree + re74 + re75,
data = nsw_PSID) # Try discard = "both"
summary(m_NNM_out) # Can add standardize = TRUE
## `cobalt` package offers additional summaries of distributional differences
## Note that it can process objects returned by matchit()!
cobalt::bal.tab(m_NNM_out,
disp.means = T,
disp.sds = T,
stats = c("mean.diffs", "variance.ratios", "ks.statistics"))
s.out <- summary(m_NNM_out, standardize = TRUE)
# The default plotting function in `MatchIt`
plot(s.out, interactive = F)
# Compare the distribution of propensity scores before and after matching
plot(m_NNM_out, type = "hist")
cobalt::love.plot(m_NNM_out,
stats = c("mean.diffs", "ks.statistics"),
threshold = c(m = .5, ks = .25),
binary = "std", #display standardized mean difference for all of the covariates
#abs = TRUE,
var.order = "unadjusted",
grid = T,
sample.names = c("Unmatched", "Matched"),
position = "top",
colors = c("red", "blue"))
# Propensity Scores before and after weighting (which = "both")
cobalt::bal.plot(m_NNM_out,
var.name = "distance",
which = "both",
type = "histogram",
mirror = TRUE)
m.data.NNM <- MatchIt::match.data(m_NNM_out)
summary(m.data.NNM)
m.data.NNM$treat %>% table
# Treatment effect using regression adjustment
NNM_mod <- lm(re78 ~ treat + age + education + black + hispanic +
nodegree + married + re74 + re75,
data = m.data.NNM)
summary(NNM_mod)
confint(NNM_mod)
## While not as consequential for propensity-score matching, it is important to preprocess the
## data set before running CEM and specify all non-numeric covariates to ensure that "binning"
## is performed correctly
nsw_PSID_cem <-
nsw_PSID %>%
mutate_at(vars(black, hispanic, married, nodegree), ~as.factor(.)) %>%
as.data.frame
cem::imbalance(group = nsw_PSID_cem$treat,
data  = nsw_PSID_cem,
drop  = c("treat", "re78", "data_id"))
## It is advised to prespecify relevant cutpoints for continuous covariates
edu_cut <- c(0, 6.5, 8.5, 12.5, 17)
re_cut <- c(0, 1, 2500, 5000, 7500, 10000, 15000, 20000, 50000, 100000, 200000)
m_cem_out <-
cem::cem(treatment = "treat",
data = nsw_PSID_cem,
verbose = TRUE,
keep.all = TRUE, # coarsened dataset is returned
drop = c("re78", "data_id"),
cutpoints = list(education = edu_cut,
re75 = re_cut))
m_cem_out
# m_cem_out$breaks
cobalt::bal.tab(m_cem_out,
data =  nsw_PSID_cem, # Data must be specified if we work with `cem` objects
disp.means = T,
disp.sds = T,
stats = c("mean.diffs", "variance.ratios", "ks.statistics"))
cobalt::love.plot(m_cem_out,
stats = c("mean.diffs", "variance.ratios", "ks.statistics"),
data = nsw_PSID_cem,
# threshold = c(m = .5, ks = .25),
binary = "std",
abs = TRUE,
var.order = "unadjusted",
grid = T,
sample.names = c("Unmatched", "Matched"),
colors = c("red", "blue"))
##
##
est <- att(m_cem_out,
re78 ~ treat + age + education + black +
hispanic + nodegree + married + re74 + re75,
data = nsw_PSID_cem)
summary(est)
##
est <- att(m_cem_out,
re78 ~ treat #+ age + education + black +
#hispanic + nodegree + married + re74 + re75
,
data = nsw_PSID_cem)
summary(est)
## It is advised to prespecify relevant cutpoints for continuous covariates
edu_cut <- c(0, 8.5, 12.5, 17)
re_cut <- c(0,  2500, 5000, 7500, 10000, 15000, 20000, 50000, 100000, 200000)
m_cem_out <-
cem::cem(treatment = "treat",
data = nsw_PSID_cem,
verbose = TRUE,
keep.all = TRUE, # coarsened dataset is returned
drop = c("re78", "data_id"),
cutpoints = list(education = edu_cut,
re75 = re_cut))
m_cem_out
# m_cem_out$breaks
cobalt::bal.tab(m_cem_out,
data =  nsw_PSID_cem, # Data must be specified if we work with `cem` objects
disp.means = T,
disp.sds = T,
stats = c("mean.diffs", "variance.ratios", "ks.statistics"))
cobalt::love.plot(m_cem_out,
stats = c("mean.diffs", "variance.ratios", "ks.statistics"),
data = nsw_PSID_cem,
# threshold = c(m = .5, ks = .25),
binary = "std",
abs = TRUE,
var.order = "unadjusted",
grid = T,
sample.names = c("Unmatched", "Matched"),
colors = c("red", "blue"))
## Let's use bal.tab
prog_cem  <- relax.cem(m_cem_out, nsw_PSID_cem, depth = 1)
prog_cem
##
est <- att(m_cem_out,
re78 ~ treat + age + education + black +
hispanic + nodegree + married + re74 + re75
,
data = nsw_PSID_cem)
summary(est)
##
est <- att(m_cem_out,
re78 ~ treat #+ age + education + black +
#hispanic + nodegree + married + re74 + re75
,
data = nsw_PSID_cem)
summary(est)
##
est <- att(m_cem_out,
re78 ~ treat + age + education + black +
hispanic  + married + re74 + re75
,
data = nsw_PSID_cem)
summary(est)
##
est <- att(m_cem_out,
re78 ~ treat + age + education + black +
hispanic  + married  + re75
,
data = nsw_PSID_cem)
summary(est)
##
est <- att(m_cem_out,
re78 ~ treat + age + education  +
hispanic + nodegree + married + re74 + re75
,
data = nsw_PSID_cem)
summary(est)
##
est <- att(m_cem_out,
re78 ~ treat + age + education + black +
+ nodegree + married + re74 + re75
,
data = nsw_PSID_cem)
summary(est)
##
est <- att(m_cem_out,
re78 ~ treat + age + education + black +
hispanic + nodegree + married + re74 + re75
,
data = nsw_PSID_cem)
summary(est)
##
est <- att(m_cem_out,
re78 ~ treat + age + education + black +
+ nodegree + married + re74 + re75
,
data = nsw_PSID_cem)
summary(est)
##
est <- att(m_cem_out,
re78 ~ treat + age + education + black +
hispanic + nodegree + married + re74 + re75
,
data = nsw_PSID_cem)
summary(est)
est
est$treatment
est$TE
est$extrapolate
est$att.model
est$att.model[,"treat"]
est$att.model["Estimate","treat"]
## Note that we need to exclude hispanic from the model
est <- att(m_cem_out,
re78 ~ treat + age + education + black + #hispanic
nodegree + married + re74 + re75,
data = nsw_PSID_cem)
summary(est)
library(tidyverse)
library(haven)
library(MatchIt)
library(cem)
library(RItools)
library(cobalt)
nsw_dw <- read_dta("http://www.nber.org/~rdehejia/data/nsw_dw.dta")
PSID <- read_dta("http://www.nber.org/~rdehejia/data/psid_controls.dta")
head(nsw_dw)
summary(nsw_dw)
head(PSID)
summary(PSID)
sum(nsw_dw$treat)
dim(PSID)
marg_mod <- lm(re78 ~ treat, data = nsw_dw)
summary(marg_mod)
confint(marg_mod)
cond_mod <- lm(re78 ~ ., data = nsw_dw)
cond_mod <- lm(re78 ~ ., data = nsw_dw %>% select(-data_id))
summary(cond_mod)
confint(cond_mod)
nsw_dw_bal <-
nsw_dw %>% select(-data_id, -re78)
xBalance(treat ~ .,
data = nsw_dw_bal,
report = "all")
bal.tab(nsw_dw_bal,
treat = nsw_dw_bal$treat)
?xBalance
?nsw_dw_bal
?bal.tab
bal.tab(nsw_dw_bal,
treat = nsw_dw_bal$treat,
disp.means = T,
disp.sds = T,
stats = c("mean.diffs", "ks.statistics", ))
bal.tab(nsw_dw_bal,
treat = nsw_dw_bal$treat,
disp.means = T,
disp.sds = T,
stats = c("mean.diffs", "ks.statistics"))
bal.plot(nsw_dw_bal,
treat = nsw_dw_bal$treat,
var.name = "age")
bal.plot(nsw_dw_bal,
treat = nsw_dw_bal$treat,
var.name = "age",
type = "histogram")
bal.plot(nsw_dw_bal,
treat = nsw_dw_bal$treat,
var.name = "nodegree",
type = "histogram")
nsw_PSID <-
nsw_dw %>%
filter(treat==1) %>%
bind_rows(PSID)
summary(nsw_PSID)
head(nsw_PSID)
lm(re78 ~ ., nsw_PSID %>% select(-data_id))
summary(lm(re78 ~ ., nsw_PSID %>% select(-data_id)))
m_NNM_out <- matchit(treat ~ .,
data  = nsw_PSID %>% select(-data_id, -re78))
m_NNM_out <- matchit(treat ~ age + education + black + hispanic + married + nodegree + re74 + re75,
data  = nsw_PSID %>% select(-data_id, -re78))
summary(m_NNM_out)
plot(m_NNM_out)
s.out <- summary(m_NNM_out)
plot(s.out)
s.out <- summary(m_NNM_out, standardize=TRUE)
plot(m_NNM_out)
plot(s.out)
plot(s.out, interactive = F)
love.plot(m_NNM_out)
love.plot(m_NNM_out,
stats = c("mean.diffs", "ks.statistics"),
thresholds = c(m = 0.5, ks = 0.25),
binary = "std",
grid = T)
love.plot(m_NNM_out,
stats = c("mean.diffs", "ks.statistics"),
thresholds = c(m = 0.5, ks = 0.25),
binary = "std",
grid = T,
abs = TRUE)
?matchit
m.data <- match.data(m_NNM_out)
summary(m.data)
match_mod <- lm(re78 ~ ., data = m.data %>% select(-weights))
m_NNM_out <- matchit(treat ~ age + education + black + hispanic +
married + nodegree + re74 + re75,
data  = nsw_PSID %>% select(-data_id))
m.data <- match.data(m_NNM_out)
summary(m.data)
match_mod <- lm(re78 ~ ., data = m.data %>% select(-weights))
summary(match_mod)
match_mod <- lm(re78 ~ ., data = m.data %>%
select(-weights, -distance))
summary(match_mod)
?cem
?read.table
setwd("~/OneDrive - Harvard Business School/Misc/Causal Inference Workshops/RMatching")
getwd
getwd()
